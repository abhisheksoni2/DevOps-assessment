name: CI/CD Pipeline

permissions:
    id-token: write
    contents: read
    packages: read
    actions: read

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    tags: 
      - '*'
    branches:
      - main
      - dev

jobs:
  Dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip' # caching pip dependencies
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
        
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: Dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v3
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        env:
            BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_ARN }}
          role-session-name: Push-ECR
          aws-region: ${{ secrets.REGION }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: devops-assessment
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "DOcker image Scanning start..."
          # curl -s https://ci-tools.anchore.io/inline_scan-v0.6.0 | bash -s -- -r $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
